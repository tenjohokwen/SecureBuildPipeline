version: '3.6'

services:
  postgres:
    image: postgres
    container_name: postgres
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASS=sonar
    ports:
      - "5432:5432"
    networks:
      - build-pipeline
    volumes:
      - db_data:/var/lib/postgresql/data
    restart: always

  sonarqube:
    image: sonarqube
    container_name: sonarqube
    links:
      - postgres
    environment:
      - SONARQUBE_JDBC_URL=jdbc:postgresql://postgres:5432/sonar
    ports:
      - "9000:9000"
    networks:
      - build-pipeline
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
    depends_on:
      - postgres
    restart: always

  nexus:
    image: sonatype/nexus3
    container_name: nexus
    cap_drop:
      - ALL
    environment:
      - JAVA_MAX_MEM=2048m
    volumes:
      - nexus_data:/nexus-data
    ports:
      - "8081:8081"
      - "5000:5000"
    networks:
      - build-pipeline
    restart: always

  jenkins:
    image: jenkins-docker
    container_name: jenkins
    cap_drop:
      - ALL
    environment:
      - JAVA_OPTS=-Xmx8g -Duser.timezone=Europe/Berlin
    volumes:
      - jenkins_data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8080:8080"
      - "50000:50000"
    networks:
      - build-pipeline
    links:
      - sonarqube
      - nexus
      - dtrack
    depends_on:
      - nexus
    restart: always

  dtrack:
    image: owasp/dependency-track
    container_name: dependency-track
    ports:
      - "8082:8080"
    networks:
      - build-pipeline
    restart: always

volumes:
  db_data:
  sonarqube_data:
  sonarqube_extensions:
  nexus_data:
  jenkins_data:

networks:
  build-pipeline:
